server:
  port: 8080

management:
  endpoints:
    web:
      base-path: /actuator
      exposure.include: health, gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

eureka:
  instance:
    hostname: ${HOSTNAME:localhost}
  client:
    healthcheck:
      enabled: true  
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka}

spring:
  application:
    name: api-gateway-service
  main:
    web-application-type: reactive
  cloud:
    gateway:
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
      routes:
        - id: client-service
          uri: lb://client-service
          predicates:
            - Path=/api/v1/client/**
          filters:
            - RewritePath=/client-service/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: clientService
                fallbackUri: forward:/fallback/clientService

        - id: credit-service
          uri: lb://credit-service
          predicates:
            - Path=/api/v1/credit/**
          filters:
            - RewritePath=/credit-service/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: creditService
                fallbackUri: forward:/fallback/creditService

        - id: account-service
          uri: lb://account-service
          predicates:
            - Path=/api/v1/account/**
          filters:
            - RewritePath=/account-service/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: accountService
                fallbackUri: forward:/fallback/accountService

        - id: transaction-service
          uri: lb://transaction-service
          predicates:
            - Path=/api/v1/transaction/**
          filters:
            - RewritePath=/transaction-service/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: transactionService
                fallbackUri: forward:/fallback/transactionService

        - id: report-service
          uri: lb://report-service
          predicates:
            - Path=/api/v1/report/**
          filters:
            - RewritePath=/report-service/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: reportService
                fallbackUri: forward:/fallback/reportService

        - id: debit-card-service
          uri: lb://debit-card-service
          predicates:
            - Path=/api/v1/debit-card/**
          filters:
            - RewritePath=/debit-card-service/(?<path>.*), /$\{path}
            - name: CircuitBreaker
              args:
                name: debitCardService
                fallbackUri: forward:/fallback/debitCardService

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 5
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 2s
      failureRateThreshold: 10
      eventConsumerBufferSize: 20
      slowCallDurationThreshold: 200ms
      slowCallRateThreshold: 30
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
      ignoreExceptions:
        - java.lang.IllegalStateException
    shared:
      registerHealthIndicator: true
      slidingWindowSize: 50
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
      eventConsumerBufferSize: 20
      ignoreExceptions:
        - java.lang.IllegalStateException
  instances:
    client-service:
      baseConfig: default
    credit-service:
      baseConfig: default
    account-service:
      baseConfig: default
    transaction-service:
      baseConfig: default
    report-service:
      baseConfig: default
    debit-card-service:
      baseConfig: default

resilience4j.timelimiter:
  time-limiter-aspect-order: 398
  configs:
    default:
      timeoutDuration: 2s
      cancelRunningFuture: false
  instances:
    client-service:
      baseConfig: default
    credit-service:
      baseConfig: default
    account-service:
      baseConfig: default
    transaction-service:
      baseConfig: default
    report-service:
      baseConfig: default
    debit-card-service:
      baseConfig: default

resilience4j.retry:
  configs:
    default:
      maxAttempts: 5
      waitDuration: 2s
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - org.springframework.web.reactive.function.client.WebClientResponseException
        - org.springframework.web.reactive.function.client.WebClientResponseException$NotFound
        - org.springframework.web.client.HttpClientErrorException$NotFound
        - java.io.IOException
  instances:
    transaction-service:
      baseConfig: default
    credit-service:
      baseConfig: default
